package enigma

/*
https://de.wikipedia.org/wiki/Enigma-M4

----------------------------------------------------------------------
| Mo-  |                                                    | Grund- |
| nats-|      S t e c k e r v e r b i n d u n g e n         | stel-  |
| tag  |                                                    | lung   |
----------------------------------------------------------------------
|  30. |18/26 17/4 21/6 3/16 19/14 22/7 8/1 12/25 5/9 10/15 |H F K D |
|  29. |20/13 2/3 10/4 21/24 12/1 6/5 16/18 15/8 7/11 23/26 |O M S R |
|  28. |9/14 4/5 18/24 3/16 20/26 23/21 12/19 13/2 22/6 1/8 |E Y D X |
|  27. |16/2 25/21 6/20 9/17 22/1 15/4 18/26 8/23 3/14 5/19 |T C X K |
|  26. |20/13 26/11 3/4 7/24 14/9 16/10 8/17 12/5 2/6 15/23 |Y S R B |
*/
var (
//	SB_XX = Plugboard{Lut: []uint8{0,  1,  2,  3,  4, 5,  6,  7, 8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26}}
//	SB_30 = Plugboard{Lut: []uint8{0, -1, -1, 16, -1, 9, -1, -1, 1, -1, 15, -1, 25, -1, -1, -1, -1,  4, 26, 14, -1,  6,  7, -1, -1, -1, -1}}
)

type (
	Plugboard struct {
		Lut []uint8 // lookup table
	}
)

func (h *Plugboard) AddWire(from, to uint8) {
}

func (h *Plugboard) Resolve(n uint8) uint8 {
	return h.Lut[n]
}
